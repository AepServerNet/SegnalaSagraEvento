@page "/nuovo"
@inject EventiLocalStorage eventiLocalStorage
@inject NavigationManager navigationManager

<EditForm Model="@modelEvento" OnValidSubmit="@HandleValidSubmit">
    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
            <label for="NomeEvento">Nome Evento:</label>
            <InputText id="NomeEvento" class="form-control" @bind-Value="@modelEvento.NomeEvento" placeholder="Nome Evento"></InputText>
        </div>
        <div class="form-group">
            <label for="CittaEvento">Luogo Evento:</label>
            <InputText id="CittaEvento" class="form-control" @bind-Value="@modelEvento.CittaEvento" placeholder="Luogo Evento"></InputText>
        </div>
        </div>
    </div>
    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                <label for="DataOraEvento">Data Evento:</label>
                <InputDate id="DataOraEvento" class="form-control" @bind-Value="@modelEvento.DataOraEvento" placeholder="Data Evento"></InputDate>
            </div>
            <div class="form-group">
                <label for="DescrizioneEvento">Descrizione Evento:</label>
                <InputTextArea id="DescrizioneEvento" class="form-control" @bind-Value="@modelEvento.DescrizioneEvento" placeholder="Descrizione Evento"></InputTextArea>
            </div>
        </div>
    </div>
    <div class="col-12"><button type="submit" class="btn btn-primary">Salva Evento</button></div>
</EditForm>

@code {

    EventoModel modelEvento = new();

    public async Task HandleValidSubmit()
    {
        await eventiLocalStorage.SalvaToDoItem(modelEvento);

        modelEvento = new();
        StateHasChanged();

        navigationManager.NavigateTo("/", false);
    }
}