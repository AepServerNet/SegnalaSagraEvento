@page "/"
@inject EventiLocalStorage eventiLocalStorage
@inject IJSRuntime jsRuntime

<PageTitle>Sagre ed eventi enogastronomici</PageTitle>

<div class="container">
     <div class="row">
         <div class="col-12"><h1>Sagre ed eventi @annoCorrente</h1></div>
     </div>
     <div class="row">
        <div class="col-12"><br /></div>
    </div>

    @if (ListaEventi == null)
    {
        <div class="row">
            <div class="col-12">Loading...</div>
        </div>
    }
    else
    {
        <SyncEventi ForceRefreshEventCallback="RefreshListaEventi" />

        <div class="row">
            <div class="col-12">
                <div class="alert alert-light" role="alert">Numero Eventi: <b>@(ListaEventi.Count())</b> / Eventi da sincronizzare: <b>@(EventiDaSincronizzare)</b></div>
            </div>
        </div>
    }
</div>

@code {
    public string annoCorrente = DateTime.UtcNow.Year.ToString();

    List<EventoModel> ListaEventi { get; set; }
    int EventiDaSincronizzare { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await RefreshListaEventi();
    }

    public async Task RefreshListaEventi()
    {
        ListaEventi = await eventiLocalStorage.GetListaEventi();
        EventiDaSincronizzare = await eventiLocalStorage.GetEventiDaSincronizzare();

        await eventiLocalStorage.EseguiSyncWithDatabase();

        StateHasChanged();
    }
}